import type { Metadata } from "next";
import { Inter, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "./components/Header";
import Footer from "./components/Footer";
import { cookies } from "next/headers";
import { AuthProvider, useAuth } from "./AuthContext";

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const [isAuth, setIsAuth] = useAuth();
  const cookieStore = cookies();
  const cookieHeader = await cookieStore;

  let token = null;
  for (const [key, cookie] of cookieHeader) {
    if (key === "access_token") {
      token = cookie.value || null;
      break;
    }
  }
  // setIsAuth(token ? true : false);

  return (
    <html lang="en">
      <body className={`${inter.variable} ${geistMono.variable} antialiased`}>
        <AuthProvider>
          <Header auth={token} />
          {children}
          <Footer />
        </AuthProvider>
      </body>
    </html>
  );
}
